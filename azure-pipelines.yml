trigger: none
pr:
  branches:
    include:
      - master

pool:
  vmImage: 'windows-2019'

variables:
  - group: secrets

stages:
- stage: Maven_And_Sonar_Analysis
  jobs:
  - job: Build_And_Publish
    displayName: 'Build, Analyze, and Publish ADAS-Park Assist App Code'
    steps:
    - checkout: self  # Ensure the repository is checked out

    # Clean and analyze dependencies
    - script: |
        mvn clean
        mvn dependency:tree
      displayName: 'Clean and Analyze Dependencies'

    # Compile the code
    - task: Maven@3
      displayName: 'Maven Compile'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'compile'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false

    # Prepare for SonarQube analysis
    - task: SonarQubePrepare@4
      displayName: 'Prepare SonarQube Analysis'
      inputs:
        SonarQube: 'Sonar_Connect'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'ADAS'
        cliProjectName: 'ADAS'
        extraProperties: |
          sonar.exclusions=**/*.bin

    # Run tests and SonarQube analysis
    - task: Maven@3
      displayName: 'Test Run and SonarQube Analysis'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'verify sonar:sonar'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false

    # Build the package
    - task: Maven@3
      displayName: 'Maven Build'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'package'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    # Verify Maven build output
    - script: |
        echo "Contents of the target directory after build:"
        ls -R target
      displayName: 'List Target Directory Contents'

    # Copy files to artifact staging directory
    - task: CopyFiles@2
      displayName: 'Copy Files to Artifact Staging Directory'
      inputs:
        contents: '**/target/**/*'
        targetFolder: '$(Build.ArtifactStagingDirectory)'

    # List contents of artifact staging directory
    - script: |
        echo "Contents of $(Build.ArtifactStagingDirectory):"
        ls -R $(Build.ArtifactStagingDirectory)
      displayName: 'List Artifact Staging Directory Contents'

    # Publish the artifacts
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'


#- stage: Test
#  displayName: 'Test'
#  jobs:
#  - job: RunPythonScript
#    steps:
#    - checkout: self  # Ensure the repository is checked out
#
#    - script: |
#        python CodeBeamer/test_results/uploadtestcases.py
#      displayName: 'Run Python Script'
#     env:
#        cb_user: $(cb_user)
#        cb_password: $(cb_password)


