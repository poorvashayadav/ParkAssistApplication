trigger: none
pr:
  branches:
    include:
      - master

pool:
  vmImage: 'windows-2019'

variables:
  - group: secrets

stages:
- stage: Maven_And_Sonar_Analysis 
  jobs:
  - job: Maven_Compile_Job # Added Maven Job for code compilation
    displayName: 'Compile ADAS-Park Assist App Code'
    steps:
    - script: |
        mvn clean
        mvn dependency:tree
      displayName: 'Clean and Analyze Dependencies'

    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'compile'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
    - task: SonarQubePrepare@4
      displayName: 'SonarQube Analysis'
      inputs:
        SonarQube: 'Sonar_Connect'  # Name of the SonarQube service connection
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'ADAS'
        cliProjectName: 'ADAS'
        extraProperties: |
          sonar.exclusions=**/*.bin


    - task: Maven@3
      displayName: 'Test Run'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'verify sonar:sonar'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false

- stage: Test
  displayName: 'Test'
  jobs:
  - job: RunPythonScript
    steps:
    - checkout: self
    - script: |
        python CodeBeamer/test_results/uploadtestcases.py
      displayName: 'Run Python Script'
      env:
        cb_user: $(cb_user)
        cb_password: $(cb_password)

- stage: PublishArtifacts
  displayName: 'Publish Build Artifacts'
  jobs:
  - job: Publish
    steps:
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
        StoreAsTar: true